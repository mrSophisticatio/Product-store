swagger: "2.0"
info:
  description: "Описание REST API для магазина продуктов"
  version: "1.0.0"
  title: "Продуктовый"
tags:
- name: "Product"
  description: "Информация о продукте"
schemes:
- "http"
paths:
  /products:
    get:
      tags:
      - "product"
      summary: "Вернуть продукты (все или отфильтрованные)"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Фильтр по наименованию продукта"
        required: false
        type: "string"
      responses:
        "200":
          description: "Успешно"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        "500":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Ошибка серверной обработки"
    post:
      tags:
      - "product"
      summary: "Добавить продукт"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Данные о новом продукте"
        required: true
        schema:
          $ref: "#/definitions/NewProduct"
      responses:
        "200":
          schema:
              $ref: "#/definitions/ActionResult"
          description: "Успешно"
        "400":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Ошибка валидации"
        "500":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Ошибка серверной обработки"
    put:
      tags:
      - "product"
      summary: "Редактировать информацию о продукте"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Данные редактируемого продукта"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "200":
          schema:
              $ref: "#/definitions/ActionResult"
          description: "Успешно"
        "400":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Ошибка валидации"
        "500":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Ошибка серверной обработки"
  /product/{id}:
    get:
      tags:
      - "product"
      summary: "Получить информацию о продукте по идентификатору"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Идентификатор продукта"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          schema:
              $ref: "#/definitions/Product"
          description: "Успешно"
        "404":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Продукт не найден"
        "500":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Ошибка серверной обработки"
    delete:
      tags:
      - "product"
      summary: "Удалить продукт"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "Идентификатор продукта"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          schema:
              $ref: "#/definitions/ActionResult"
          description: "Успешно"
        "404":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Продукт не найден"
        "500":
          schema:
            $ref: "#/definitions/ActionResult"
          description: "Ошибка серверной обработки"
definitions:
  NewProduct:
    type: "object"
    properties:
      name:
        type: "string"
      cost:
        type: "number"
        format: "float"
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      cost:
        type: "number"
        format: "float"
  ActionResult:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"